# Generated by Django 4.2 on 2023-09-21 07:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Chat",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                ("isActive", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Clinic",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "phoneNumber",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, null=True, region=None, unique=True
                    ),
                ),
                ("city", models.CharField(blank=True, max_length=255, null=True)),
                ("state", models.CharField(blank=True, max_length=255, null=True)),
                ("area", models.CharField(blank=True, max_length=255, null=True)),
                ("isActive", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Disease",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Eczema", "Eczema"),
                            (
                                "Warts Molluscum and other Viral Infection",
                                "Warts Molluscum and other Viral Infection",
                            ),
                            ("Melanoma", "Melanoma"),
                            ("Atopic Dermatatis", "Atopic Dermatatis"),
                            ("Basal Cell Carcinoma", "Basal Cell Carcinoma"),
                            ("Melanocytic Nevi (NV)", "Melanocytic Nevi (NV)"),
                            (
                                "Benign Keratosis-like Lesions (BKL)",
                                "Benign Keratosis-like Lesions (BKL)",
                            ),
                            (
                                "Psoriasis pictures Lichen Planus and related diseases",
                                "Psoriasis pictures Lichen Planus and related diseases",
                            ),
                            (
                                "Seborrheic Keratoses and other Benign Tumors",
                                "Seborrheic Keratoses and other Benign Tumors",
                            ),
                            (
                                "Tinea Ringworm Candidiasis and other Fungal Infections",
                                "Tinea Ringworm Candidiasis and other Fungal Infections",
                            ),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("prescription", models.TextField(blank=True, null=True)),
                ("symptoms", models.TextField(blank=True, null=True)),
                ("isActive", models.BooleanField(default=True)),
                (
                    "hindi_name",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Eczema", "Eczema"),
                            (
                                "Warts Molluscum and other Viral Infection",
                                "Warts Molluscum and other Viral Infection",
                            ),
                            ("Melanoma", "Melanoma"),
                            ("Atopic Dermatatis", "Atopic Dermatatis"),
                            ("Basal Cell Carcinoma", "Basal Cell Carcinoma"),
                            ("Melanocytic Nevi (NV)", "Melanocytic Nevi (NV)"),
                            (
                                "Benign Keratosis-like Lesions (BKL)",
                                "Benign Keratosis-like Lesions (BKL)",
                            ),
                            (
                                "Psoriasis pictures Lichen Planus and related diseases",
                                "Psoriasis pictures Lichen Planus and related diseases",
                            ),
                            (
                                "Seborrheic Keratoses and other Benign Tumors",
                                "Seborrheic Keratoses and other Benign Tumors",
                            ),
                            (
                                "Tinea Ringworm Candidiasis and other Fungal Infections",
                                "Tinea Ringworm Candidiasis and other Fungal Infections",
                            ),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("hindi_description", models.TextField(blank=True, null=True)),
                ("hindi_prescription", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="History",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("affected", models.JSONField(blank=True, null=True)),
                ("createdAt", models.DateTimeField(auto_now_add=True, null=True)),
                ("updatedAt", models.DateTimeField(auto_now=True, null=True)),
                ("isActive", models.BooleanField(default=True)),
                (
                    "disease",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="history",
                        to="api.disease",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("isActive", models.BooleanField(default=True)),
                (
                    "history",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="patient",
                        to="api.history",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="patient",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Record",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "model",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("efficientnetb2", "efficientnetb2"),
                            ("efficientnetb4", "efficientnetb4"),
                            ("efficientnetb7", "efficientnetb7"),
                            ("mobilenetv2", "mobilenetv2"),
                        ],
                        default=("efficientnetb7", "efficientnetb7"),
                        max_length=15,
                        null=True,
                    ),
                ),
                ("uploadedImage", models.URLField(blank=True, null=True)),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                (
                    "localisation",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Face", "Face"),
                            ("Scalp", "Scalp"),
                            ("Hands", "Hands"),
                            ("Feet", "Feet"),
                            ("Arms and Legs", "Arms and Legs"),
                            ("Chest and Back", "Chest and Back"),
                            ("Groin", "Groin"),
                            ("Nails", "Nails"),
                            ("Mouth and Lips", "Mouth and Lips"),
                            ("Underarms", "Underarms"),
                            ("Palms and Soles", "Palms and Soles"),
                            ("Ears", "Ears"),
                            ("Back of the Neck", "Back of the Neck"),
                        ],
                        null=True,
                    ),
                ),
                ("isActive", models.BooleanField(default=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="record",
                        to="api.patient",
                    ),
                ),
                (
                    "prediction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="record",
                        to="api.disease",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255)),
                ("body", models.TextField(blank=True, null=True)),
                ("redirectUrl", models.URLField(blank=True, null=True)),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                ("isread", models.BooleanField(default=False)),
                ("isActive", models.BooleanField(default=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("body", models.TextField(blank=True, null=True)),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                ("isActive", models.BooleanField(default=True)),
                (
                    "chat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="message",
                        to="api.chat",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Doctor",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "qualification",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("university", models.CharField(blank=True, max_length=255, null=True)),
                ("yoe", models.IntegerField(blank=True, null=True)),
                ("isActive", models.BooleanField(default=True)),
                ("charge", models.IntegerField()),
                (
                    "clinic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctor",
                        to="api.clinic",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="chat",
            name="doctor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="chat",
                to="api.doctor",
            ),
        ),
        migrations.AddField(
            model_name="chat",
            name="patient",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="chat",
                to="api.patient",
            ),
        ),
        migrations.CreateModel(
            name="Case",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("requestDescription", models.TextField(blank=True, null=True)),
                (
                    "requestStatus",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Pending", "Pending"),
                            ("Accepted", "Accepted"),
                            ("Rejected", "Rejected"),
                        ],
                        default="Pending",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("createdAt", models.DateTimeField(auto_now_add=True, null=True)),
                ("updatedAt", models.DateTimeField(auto_now=True)),
                ("isActive", models.BooleanField(default=True)),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="case",
                        to="api.doctor",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="case",
                        to="api.patient",
                    ),
                ),
                (
                    "record",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="case",
                        to="api.record",
                    ),
                ),
            ],
        ),
    ]
